import discord
import requests
import psutil
import sys
import time
import datetime
import logging
from discord.ext import commands
from wolverine import *
from os import listdir
from os.path import isfile, join
from typing import Union


logging.basicConfig(filename="./logs/latest.log", filemode="a",
		    format='[%(asctime)s | %(name)s / %(levelname)s]: %(message)s', level=logging.INFO)
logger = logging.getLogger("CommandListener")
nullTime = time.time()




class Main(commands.Cog):
	def __init__(self, bot):
		self.bot = bot

	@commands.command()
	@commands.has_permissions(manage_guild=True)
	@commands.cooldown(1, 5, commands.BucketType.guild)
	async def prefix(self, ctx, prefix):
		if len(prefix) > 5:
			return await fail(ctx, "–ü—Ä–µ—Ñ–∏–∫—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–ª–∏–Ω–Ω–µ–µ 5 —Å–∏–º–≤–æ–ª–æ–≤.")
		if "`" in prefix:
			return await fail(ctx, "–ü—Ä–µ—Ñ–∏–∫—Å —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π —Å–∏–º–≤–æ–ª.")
		key = ctx.guild.id
		set_prefix(key, prefix)
		await done(ctx, f"–ü—Ä–µ—Ñ–∏–∫—Å –¥–ª—è —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ –∏–∑–µ–º–µ–Ω–µ–Ω –Ω–∞ `{prefix}`.")

	@commands.command()
	@commands.has_permissions(manage_messages=True)
	@commands.bot_has_permissions(manage_messages=True)
	@commands.cooldown(3, 10, commands.BucketType.guild)
	async def clear(self, ctx, limit: int):
		if 100 >= limit >= 10:
			m = await ctx.send(pattern.format(waiting, 0, limit))
			messages = await ctx.channel.history(limit=limit).flatten()
			deleted = 0
			key = ctx.guild.id
			args = fetch_scanner_arguments(key)
			args.update(manual_scanner_args)
			i = 0
			for message in messages:
				i += 1
				try:
					await m.edit(content=pattern.format(waiting, i, limit))
				except:
					return await fail(ctx, "–û—Ç–º–µ–Ω–µ–Ω–æ.")
				async with ctx.typing():
					if await scan_message(message, **args):
						deleted += 1

			await m.edit(content=f"{vmark} –ó–∞–≤–µ—Ä—à–µ–Ω–æ. [{i} / {limit}]\n{vmark} –£–¥–∞–ª–µ–Ω–æ {deleted} —Å–æ–æ–±—â–µ–Ω–∏–π.")
		else:
			await fail(ctx, f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –æ—Ç 10 –¥–æ 100.")

	@commands.command()
	@commands.has_permissions(manage_messages=True)
	@commands.bot_has_permissions(manage_messages=True)
	@commands.cooldown(1, 30, commands.BucketType.guild)
	async def clearall(self, ctx, limit: int):
		if 100 >= limit >= 10:
			deleted = 0
			limit_ = limit * len(ctx.guild.text_channels)
			key = ctx.guild.id
			args = fetch_scanner_arguments(key)
			args.update(manual_scanner_args)
			m = await ctx.send(pattern.format(waiting, 0, limit_))
			i = 0
			for channel in ctx.guild.text_channels:
				messages = await channel.history(limit=limit).flatten()
				for message in messages:
					i += 1
					try:
						await m.edit(content=pattern.format(waiting, i, limit_))
					except:
						return await fail(ctx, "–û—Ç–º–µ–Ω–µ–Ω–æ.")
					async with ctx.typing():
						if await scan_message(message, **args):
							deleted += 1

			await m.edit(content=f"{vmark} –ó–∞–≤–µ—Ä—à–µ–Ω–æ. [{i} / {limit_}]\n{vmark} –£–¥–∞–ª–µ–Ω–æ {deleted} —Å–æ–æ–±—â–µ–Ω–∏–π.")
		else:
			await fail(ctx, f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –æ—Ç 10 –¥–æ 100.")

	@commands.command()
	@commands.cooldown(1, 30, commands.BucketType.user)
	async def report(self, ctx, *, message):
		avatar = str(ctx.author.avatar_url)
		payload = {"embeds": [{"description": message,
				   "color": 0xff6060, "footer": {
						"text": str(ctx.author),
						"icon_url": avatar
						}}]}
		requests.post(hook, json=payload)
		await done(ctx, "–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä –ø–æ–¥–¥–µ—Ä–∂–∫–∏.")

	@commands.command()
	@commands.has_permissions(manage_guild=True)
	@commands.cooldown(1, 5, commands.BucketType.guild)
	async def enable(self, ctx, module):
		if module in ["dms", "notify", "scan"]:
			db = db_read()
			key = ctx.guild.id
			if module == "scan":
				if key in db.get("disabled", []):
					db["disabled"].remove(key)
					db_write(db)
					return await done(ctx, "–ó–∞—â–∏—Ç–∞ –≤–∫–ª—é—á–µ–Ω–∞.")
			if module == "dms":
				if key in db.get("nodms"):
					db["nodms"].remove(key)
					db_write(db)
					return await done(ctx, "–û—Ç–ø—Ä–∞–≤–∫–∞ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤–∫–ª—é—á–µ–Ω–∞.")
			if module == "notify":
				if key in db.get("nodms"):
					db["dontnotify"].remove(key)
					db_write(db)
					return await done(ctx, "–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤–∫–ª—é—á–µ–Ω–∞.")
			await fail(ctx, "–î–∞–Ω–Ω—ã–π –º–æ–¥—É–ª—å —É–∂–µ –≤–∫–ª—é—á–µ–Ω.")
		else:
			await fail(ctx, "–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –º–æ–¥—É–ª—å –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è.")

	@commands.command()
	@commands.has_permissions(manage_guild=True)
	@commands.cooldown(1, 5, commands.BucketType.guild)
	async def disable(self, ctx, module):
		if module in ["dms", "notify", "scan"]:
			db = db_read()
			key = ctx.guild.id
			if module == "scan":
				if key not in db.get("disabled", []):
					db["disabled"].append(key)
					db_write(db)
					return await done(ctx, "–ó–∞—â–∏—Ç–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞.")
			if module == "dms":
				if key not in db.get("nodms"):
					db["nodms"].append(key)
					db_write(db)
					return await done(ctx, "–û—Ç–ø—Ä–∞–≤–∫–∞ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤—ã–∫–ª—é—á–µ–Ω–∞.")
			if module == "notify":
				if key not in db.get("nodms"):
					db["dontnotify"].append(key)
					db_write(db)
					return await done(ctx, "–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤—ã–∫–ª—é—á–µ–Ω–∞.")
			await fail(ctx, "–î–∞–Ω–Ω—ã–π –º–æ–¥—É–ª—å —É–∂–µ –≤—ã–∫–ª—é—á–µ–Ω.")
		else:
			await fail(ctx, "–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –º–æ–¥—É–ª—å –¥–ª—è –≤—ã–∫–ª—é—á–µ–Ω–∏—è.")

	@commands.command(aliases=["notify"])
	@commands.has_permissions(manage_guild=True)
	@commands.cooldown(1, 5, commands.BucketType.guild)
	async def notifications(self, ctx, arg: Union[discord.TextChannel, str]):
		db = db_read()
		key = str(ctx.guild.id)

		if arg in ["off", "remove"]:
			if key in db.get("logchannels", {}):
				del db["logchannels"][key]
				db_write(db)
				return await done(ctx, "–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª –æ—Ç–∫–ª—é—á–µ–Ω–∞.")
			else:
				return await fail(ctx, "–ù–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ –µ—â—ë –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω –∫–∞–Ω–∞–ª –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.")
		channel: discord.TextChannel = arg
		cid = channel.id
		db["logchannels"].get(key)
		db["logchannels"][key] = cid
		db_write(db)
		await done(ctx, f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –≤ –∫–∞–Ω–∞–ª {channel.mention}.")




class Owner(commands.Cog):
	def __init__(self, bot):
		self.bot = bot

	@commands.command()
	@commands.is_owner()
	async def root(self, ctx):
		help_ = f"""
`~eval <code>` - –í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–¥.
`~exec <code>` - –í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–¥ (–¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏).
`~await <coroutine>` - –í—ã–∑–≤–∞—Ç—å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é.
`~add_eb <string>` - –î–æ–±–∞–≤–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç –≤ –±–ª–æ–∫-–ª–∏—Å—Ç–∞ –µ–º–±–µ–¥–æ–≤.
`~set_eb <index> <string>` - –ó–∞–º–µ–Ω–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç –±–ª–æ–∫-–ª–∏—Å—Ç–∞ –µ–º–±–µ–¥–æ–≤.
`~remove_eb <index>` - –£–¥–∞–ª–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç –∏–∑ –±–ª–æ–∫-–ª–∏—Å—Ç–∞ –µ–º–±–µ–¥–æ–≤.
`~servers` - –°–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–≤, –Ω–∞ –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å –±–æ—Ç.
`~logs` - –°–ø–∏—Å–æ–∫ –ª–æ–≥-—Ñ–∞–π–ª–æ–≤.
`~purge_logs` - –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –ª–æ–≥-—Ñ–∞–π–ª—ã.
`~send_log <fname>` - –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–æ–≥-—Ñ–∞–π–ª –≤ —á–∞—Ç.
`~dm_log <fname>` - –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–æ–≥-—Ñ–∞–π–ª –≤–∞–º –≤ –õ–°.
`~restart` - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞.
`~shutdown` - –í—ã–∫–ª—é—á–∏—Ç—å –±–æ—Ç–∞.
""".replace("~", prefix(ctx))
		embed = discord.Embed(color=PRIMARY)
		embed.add_field(name="üîß –°–∏—Å—Ç–µ–º–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã", value=help_)
		embed.set_footer(text="¬© 2021, Ezz Development | https://github.com/ezz-dev",
				 icon_url=self.bot.user.avatar_url)
		await ctx.send(embed=embed)

	@commands.command()
	@commands.is_owner()
	async def servers(self, ctx):
		servers = []
		for guild in self.bot.guilds:
			servers.append(f"{guild.id} | {guild.name}: {guild.member_count}")
		string = '\n'.join(servers)
		result = f"```{string}```"
		await ctx.send(result)

	@commands.command()
	@commands.is_owner()
	async def logs(self, ctx):
		path = "./logs/"
		files = [f for f in listdir(path)]
		string = '\n'.join(files)
		result = f"```{string}```"
		await ctx.send(result)

	@commands.command()
	@commands.is_owner()
	async def purge_logs(self, ctx):
		path = "./logs/"
		files = [f for f in listdir(path)]
		deleted = 0
		for file in files:
			try:
				os.remove(path + file)
				deleted += 1
			except:
				continue
		await done(ctx, f"–£–¥–∞–ª–µ–Ω–æ {deleted} —Ñ–∞–π–ª–æ–≤.")

	@commands.command()
	@commands.is_owner()
	async def send_log(self, ctx, fname):
		await ctx.send(file=discord.File(fr"./logs/{fname}"))

	@commands.command()
	@commands.is_owner()
	async def dm_log(self, ctx, fname):
		await ctx.author.send(file=discord.File(fr"./logs/{fname}"))
		await done(ctx, "–§–∞–π–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤–∞–º –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.")

	@commands.command()
	@commands.is_owner()
	async def shutdown(self, ctx):
		await done(ctx, "–í—ã–∫–ª—é—á–µ–Ω–∏–µ...")
		logger.info("Manual shudown.")
		await self.bot.change_presence(status=discord.Status.idle,
					       activity=discord.Activity(name="–í—ã–∫–ª—é—á–µ–Ω–∏–µ...",
									 type=discord.ActivityType.watching))
		await logout(self.bot)

	@commands.command()
	@commands.is_owner()
	async def restart(self, ctx):
		m = await ctx.send(f"{waiting} –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫...")
		logger.info("Manual restart.")
		await self.bot.change_presence(status=discord.Status.idle,
					       activity=discord.Activity(name="–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫...",
									 type=discord.ActivityType.watching))
		with open(".restarted", "w+") as f:
			f.write(f"{ctx.channel.id}:{m.id}")
		exit_handler()
		python = sys.executable
		os.execl(python, python, *sys.argv)

	@commands.command(name="eval")
	@commands.is_owner()
	async def _eval(self, ctx, *, code):
		result = eval(code, globals(), locals())
		if result:
			await ctx.send(f"```py\n{result}```")

	@commands.command(name="exec")
	@commands.is_owner()
	async def _exec(self, ctx, *, code):
		exec(code, globals(), locals())

	@commands.command(name="await")
	@commands.is_owner()
	async def _await(self, ctx, *, code):
		result = await eval(code, globals(), locals())
		if result:
			await ctx.send(f"```py\n{result}```")

	@commands.command()
	@commands.is_owner()
	async def add_eb(self, ctx, *, string):
		ebs = get_eb()
		ebs.append(string)
		set_eb(ebs)
		await done(ctx, f"–≠–ª–µ–º–µ–Ω—Ç —Å –∏–Ω–¥–µ–∫—Å–æ–º {len(ebs) + 1} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–µ `{string}`.")

	@commands.command()
	@commands.is_owner()
	async def set_eb(self, ctx, index: int, *, string):
		ebs = get_ebs()
		ebs[index] = string
		set_eb(patterns)
		await done(ctx, f"–≠–ª–µ–º–µ–Ω—Ç —Å –∏–Ω–¥–µ–∫—Å–æ–º {index} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–µ `{pattern}`.")

	@commands.command()
	@commands.is_owner()
	async def remove_eb(self, ctx, *, index: int):
		ebs = get_eb()
		del ebs[index]
		set_patterns(ebs)
		await done(ctx, f"–≠–ª–µ–º–µ–Ω—Ç —Å –∏–Ω–¥–µ–∫—Å–æ–º {index} —É–¥–∞–ª–µ–Ω.")




class Info(commands.Cog):
	def __init__(self, bot):
		self.bot = bot

	@commands.command()
	async def status(self, ctx):
		scanner_calls = getsc()
		deleted_messages = getdmc()
		up = int(time.time() - nullTime)
		up = datetime.timedelta(seconds=up)
		ping = round(self.bot.latency * 1000, 2)
		data = f"""
```
–°–µ—Ä–≤–µ—Ä–æ–≤:                 {len(self.bot.guilds)}
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:            {len(self.bot.users)}
``````
–í—ã–∑–æ–≤–æ–≤ —Å–∫–∞–Ω–µ—Ä–∞:          {scanner_calls}
–£–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π:        {deleted_messages}
``````
–ö–ª–∏–µ–Ω—Ç:                   {self.bot.user}
ID:                       {self.bot.user.id}
``````
–û–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–º—è—Ç—å:       {psutil.virtual_memory().percent}%
–ù–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ –¶–ü:           {psutil.cpu_percent()}%
``````
–ê–ø—Ç–∞–π–º:                   {up}
–ó–∞–¥–µ—Ä–∂–∫–∞ –≤–µ–±—Å–æ–∫–µ—Ç–∞:       {ping} –º—Å.
``````
Python:                   {sys.version.split('(')[0]}
discord.py:               {discord.__version__}
```
"""
		e = discord.Embed(color=PRIMARY)
		e.add_field(name="–°–æ—Å—Ç–æ—è–Ω–∏–µ –±–æ—Ç–∞", value=data)
		e.set_thumbnail(url="https://media.discordapp.net/attachments/832662675963510827/857631236355522650/logo.png")
		await ctx.send(embed=e)

	@commands.command()
	async def about(self, ctx):
		embed = discord.Embed(color=PRIMARY, title="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è",
				      description=f"""
{info} –î–∞–Ω–Ω—ã–π –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –∑–∞—â–∏—Ç—ã –≤–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ –æ—Ç —Å–∫–∞–º–∞ —Å ¬´–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–º Nitro –Ω–∞ 3 –º–µ—Å—è—Ü–∞ –æ—Ç Steam¬ª –∏ –ª—é–¥—å–º–∏ —è–∫–æ–±—ã —Ä–∞–∑–¥–∞—é—â–∏–º–∏ —Å–≤–æ–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å CS:GO. –ï—Å–ª–∏ –≤—ã —É–≤–∏–¥–∏—Ç–µ –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –Ω–µ –≤–µ–¥–∏—Ç–µ—Å—å –Ω–∞ –Ω–∏—Ö!

{danger} –ß—Ç–æ-–±—ã –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –Ω–µ –≤–∑–ª–æ–º–∞–ª–∏, –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ BetterDiscord –∏ –Ω–µ –∑–∞–≥—Ä—É–∂–∞–π—Ç–µ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ–µ –ü–û. –ï—Å–ª–∏ –∂–µ –≤–∞—Å —É–∂–µ –≤–∑–ª–æ–º–∞–ª–∏, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –≤–∞–º –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:
„Üç–£–¥–∞–ª–∏—Ç–µ BetterDiscord —Å –≤–∞—à–µ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞;
„Üç–ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∫–ª–∏–µ–Ω—Ç Discord;
„Üç–ü–æ–º–µ–Ω—è–π—Ç–µ –ø–∞—Ä–æ–ª–∏ –≤—Å–µ—Ö –≤–∞—à–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤;
„Üç–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–∞–¥–µ–∂–Ω—ã–π –∞–Ω—Ç–∏–≤–∏—Ä—É—Å –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –ø–æ–ª–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞.

–ë–µ—Ä–µ–≥–∏—Ç–µ —Å–µ–±—è!

**–í–µ—Ä—Å–∏—è —è–¥—Ä–∞**: [Wolverine {version()}](https://scamprotect.ml/wolverine)
**–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫**: [xshadowsexy#0141](https://discord.com/users/811976103673593856)
**–ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥**: [–£—Å—Ç–∞—Ä–µ–≤—à–∞—è –ø—É–±–ª–∏—á–Ω–∞—è –≤–µ—Ä—Å–∏—è](https://github.com/ezz-dev/scamprotect)
**–°–∞–π—Ç –±–æ—Ç–∞**: https://scamprotect.ml/
**–ù–∞—à —Å–µ—Ä–≤–µ—Ä**: https://discord.gg/GpedR6jeZR
**–ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞—Ç—å**: https://qiwi.com/n/XF765
""")
		embed.set_footer(text="–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞!")
		await ctx.send(embed=embed)

	@commands.command()
	async def invite(self, ctx):
		link = f"https://discord.com/api/oauth2/authorize?client_id={self.bot.user.id}&permissions=8&scope=bot"
		embed = discord.Embed(description=f"{info} –î–æ–±–∞–≤–∏—Ç—å –º–µ–Ω—è –Ω–∞ —Å–≤–æ–π —Å–µ—Ä–≤–µ—Ä: [[–ù–∞–∂–º–∏]]({link})",
				      color=PRIMARY)
		await ctx.send(embed=embed)

	@commands.command()
	async def support(self, ctx):
		embed = discord.Embed(description=f"{info} –°–µ—Ä–≤–µ—Ä –ø–æ–¥–¥–µ—Ä–∂–∫–∏: [[–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è]]({support})",
				      color=PRIMARY)
		await ctx.send(embed=embed)

	@commands.command()
	async def help(self, ctx):
		embed = discord.Embed(title="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!", color=PRIMARY)
		embed.add_field(name="üß≠ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", value=f"""
`~help` - –í—ã–≤–æ–¥–∏—Ç –¥–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
`~status` - –¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–æ—Ç–∞ –∏ –µ–≥–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞.
`~invite` - –ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–∞.
`~about` - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ –∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤.
`~support` - –°–µ—Ä–≤–µ—Ä –ø–æ–¥–¥–µ—Ä–∂–∫–∏.
""".replace("~", prefix(ctx)), inline=False)
		embed.add_field(name="üõ†Ô∏è –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã", value=f"""
`~clear <limit>` - –ü—Ä–æ—Å–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å N —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Ç–µ–∫—É—â–µ–º –∫–∞–Ω–∞–ª–µ.
`~clearall <limit>` - –ü—Ä–æ—Å–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å N —Å–æ–æ–±—â–µ–Ω–∏–π –≤–æ –≤—Å–µ—Ö –∫–∞–Ω–∞–ª–∞—Ö.
`~report <message>` - –ü–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è –Ω–∞ —Å—Å—ã–ª–∫—É/—Å–æ–æ–±—â–µ–Ω–∏–µ.
""".replace("~", prefix(ctx)), inline=False)
		embed.add_field(name="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞", value=f"""
`~prefix` - –ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–µ—Ñ–∏–∫—Å –±–æ—Ç–∞ –Ω–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ.
`~enable scan` - –í–∫–ª—é—á–∏—Ç—å —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π.
`~enable dms` - –í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö.
`~enable notify` - –í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.
`~disable scan` - –í—ã–∫–ª—é—á–∏—Ç—å —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π.
`~disable dms` - –í—ã–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö.
`~disable notify` - –í—ã–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.
`~notify remove` - –û—Ç–∫–ª—é—á–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª.
`~notify <channel>` - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.
""".replace("~", prefix(ctx)), inline=False)
		embed.set_footer(icon_url=self.bot.user.avatar_url,
				 text="¬© 2021, Ezz Development | https://github.com/ezz-dev")
		await ctx.send(embed=embed)




def setup(bot):
	bot.add_cog(Main(bot))
	bot.add_cog(Owner(bot))
	bot.add_cog(Info(bot))
	logger.info("Loaded successful.")
